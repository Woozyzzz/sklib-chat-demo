{"mappings":"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","sources":["<anon>","src/main.js"],"sourcesContent":["const el = (selector)=>document.querySelector(selector);\n// 元素\nconst elChatHeaderMenu = el(`.chat-header__menu`);\nconst elChatHeaderMenuNav = el(`.chat-header__menu__nav`);\nconst elChatHeaderMenuNavSignInOrUp = el(`.chat-header__menu__nav__sign-in-or-up`);\nconst elChatHeaderMenuNavList = el(`.chat-header__menu__nav__list`);\nconst elChatHeaderNewChat = el(`.chat-header__new-chat`);\nconst elChatHeaderMenuNavBottomListItemSignOut = el(`.chat-header__menu__nav__bottom-list .list-item.sign-out`);\nconst elChatMainAsideSignInOrUp = el(`.chat-main__aside__sign-in-or-up`);\nconst elChatMainAsideNewChat = el(`.chat-main__aside__new-chat`);\nconst elChatMainAsideList = el(`.chat-main__aside__list`);\nconst elChatMainMenuAsideBottomListItemSignOut = el(`.chat-main__aside__bottom-list .list-item.sign-out`);\nconst elChatMainMainArticle = el(`.chat-main__main__article`);\nconst elChatMainMainFormQuestionTextarea = el(`.chat-main__main__form__question__textarea`);\nconst elChatMask = el(`.chat-mask`);\nconst elChatMaskDialogHeaderClose = el(`.chat-mask__dialog .dialog__header__close`);\n// 事件处理\nconst onClickSignInOrUp = ()=>{\n    elChatMask.classList.add(\"visible\");\n};\nconst onClickNewChat = ()=>{\n    elChatMainMainArticle.innerHTML = \"\";\n    elChatMainMainFormQuestionTextarea.focus();\n};\nconst onClickListItem = async function(event) {\n    const { target: { className  } , target  } = event;\n    if (![\n        \"list-item\",\n        \"list-item__text\"\n    ].includes(className)) return;\n    const elListItemList = this.children;\n    for (const elListItem of elListItemList)elListItem.classList.remove(\"active\");\n    const currentElListItem = className.includes(\"list-item__text\") ? target.parentNode : target;\n    currentElListItem.classList.add(\"active\");\n    elChatMainMainArticle.innerHTML = \"\";\n// await fetchChatHistoryList().catch((error) => {\n//   throw error;\n// });\n};\nconst onClickSignOut = ()=>{\n    setSignInStatus(\"\");\n    renderSignInOrUp(false);\n};\nconst onKeyupQuestionTextarea = (event)=>{\n    const { key , shiftKey  } = event;\n    if (!(key === \"Enter\" && !shiftKey)) return;\n    currentChatHistoryList.push({\n        role: 1,\n        content: elChatMainMainFormQuestionTextarea.value\n    });\n    renderCurrentChatHistoryList([\n        {\n            role: 1,\n            content: elChatMainMainFormQuestionTextarea.value\n        }\n    ]);\n    elChatMainMainFormQuestionTextarea.value = \"\";\n    elChatMainMainArticle.scrollTop = elChatMainMainArticle.scrollHeight;\n    setTimeout(()=>{\n        currentChatHistoryList.push({\n            role: 2,\n            content: \"抱歉我没有理解您的问题。\"\n        });\n        renderCurrentChatHistoryList([\n            {\n                role: 2,\n                content: \"抱歉我没有理解您的问题。\"\n            }\n        ]);\n        const top = 99999;\n        elChatMainMainArticle.scrollBy({\n            top\n        });\n    }, 1000);\n};\n// 监听器\nwindow.addEventListener(\"resize\", ()=>{\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n});\nwindow.addEventListener(\"click\", (event)=>{\n    const { target  } = event;\n    if (elChatMask.classList.contains(\"visible\")) return;\n    if (elChatHeaderMenu === target || elChatHeaderMenuNav.contains(target)) return;\n    elChatHeaderMenuNav.classList.remove(\"visible\");\n});\nelChatHeaderMenu.addEventListener(\"click\", (event)=>{\n    const { target  } = event;\n    if (elChatHeaderMenuNav.classList.contains(\"visible\")) {\n        if (target !== elChatHeaderMenu) return;\n        elChatHeaderMenuNav.classList.remove(\"visible\");\n        return;\n    }\n    elChatHeaderMenuNav.classList.add(\"visible\");\n});\nelChatHeaderMenuNavSignInOrUp.addEventListener(\"click\", onClickSignInOrUp);\nelChatHeaderMenuNavList.addEventListener(\"click\", onClickListItem);\nelChatHeaderNewChat.addEventListener(\"click\", onClickNewChat);\nelChatHeaderMenuNavBottomListItemSignOut.addEventListener(\"click\", onClickSignOut);\nelChatMainAsideSignInOrUp.addEventListener(\"click\", onClickSignInOrUp);\nelChatMainAsideNewChat.addEventListener(\"click\", onClickNewChat);\nelChatMainAsideList.addEventListener(\"click\", onClickListItem);\nelChatMainMenuAsideBottomListItemSignOut.addEventListener(\"click\", onClickSignOut);\nelChatMainMainFormQuestionTextarea.addEventListener(\"keyup\", onKeyupQuestionTextarea);\nelChatMaskDialogHeaderClose.addEventListener(\"click\", ()=>{\n    elChatMask.classList.remove(\"visible\");\n    // 模拟登录\n    setSignInStatus(\"admin\");\n    renderSignInOrUp(true);\n});\n// 数据\nlet currentTitleHistoryList = [];\nlet currentChatHistoryList = [];\n// 模拟接口定义\nconst fetchTitleHistoryList = async ()=>{\n    const { data  } = await fetch(\"public/fetch-title-history-list.json\").then((response)=>response.json()).catch((error)=>{\n        throw error;\n    });\n    currentTitleHistoryList = Array.isArray(data) ? data : [];\n    renderCurrentTitleHistoryList();\n};\nconst fetchChatHistoryList = async ()=>{\n    const { data  } = await fetch(`public/fetch-chat-history-list-${randomNumber(3)}.json`).then((response)=>response.json()).catch((error)=>{\n        throw error;\n    });\n    currentChatHistoryList = Array.isArray(data) ? data : [];\n    renderCurrentChatHistoryList(currentChatHistoryList);\n};\n// 数据处理方法\nconst randomNumber = (num)=>{\n    return Math.floor(Math.random() * num);\n};\n// 创建函数来递归生成 HTML 结构\nconst createTreeNode = (node)=>{\n    const element = document.createElement(node.tag);\n    if (node.classList) for (const className of node.classList)element.classList.add(className);\n    if (node.text) {\n        if (!node.text.includes(\"```\")) element.textContent = node.text;\n        const regex = /(```)([\\s\\S]+?)(```)/g;\n        const replacement = `<pre class=\"content__code\"><code>$2</code></pre>`;\n        element.innerHTML = node.text.replace(regex, replacement);\n    }\n    if (node.children) for (const childNode of node.children){\n        const childElement = createTreeNode(childNode);\n        element.appendChild(childElement);\n    }\n    return element;\n};\n// 获取登录状态\nconst getSignInStatus = ()=>{\n    const signedIn = localStorage.getItem(\"signedIn\") || \"\";\n    if (!signedIn) return false;\n    return true;\n};\n// 设置登录状态\nconst setSignInStatus = (signedIn)=>{\n    if (!signedIn) {\n        localStorage.removeItem(\"signedIn\");\n        return;\n    }\n    localStorage.setItem(\"signedIn\", signedIn);\n};\n// 渲染方法\nconst renderCurrentTitleHistoryList = ()=>{\n    const treeData = currentTitleHistoryList.map((currentTitleHistoryItem)=>{\n        const { content  } = currentTitleHistoryItem;\n        const titleValue = {\n            tag: \"li\",\n            classList: [\n                \"list-item\"\n            ],\n            children: [\n                {\n                    tag: \"p\",\n                    classList: [\n                        \"list-item__text\"\n                    ],\n                    text: content\n                },\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"list-item__button-wrapper\"\n                    ],\n                    children: [\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"button-wrapper__download\"\n                            ]\n                        },\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"button-wrapper__delete\"\n                            ]\n                        }\n                    ]\n                }\n            ]\n        };\n        return titleValue;\n    }) || [];\n    for (const node of treeData){\n        const element = createTreeNode(node);\n        const copyElement = createTreeNode(node);\n        elChatMainAsideList.appendChild(element);\n        elChatHeaderMenuNavList.appendChild(copyElement);\n    }\n};\nconst renderCurrentChatHistoryList = (chatHistoryList)=>{\n    const treeData = chatHistoryList.map((chatHistoryItem)=>{\n        const { role , content  } = chatHistoryItem;\n        const userValue = {\n            tag: \"section\",\n            classList: [\n                \"article__section\",\n                \"user\"\n            ],\n            children: [\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__content-wrapper\"\n                    ],\n                    children: [\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"content-wrapper__profile\"\n                            ]\n                        },\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"content-wrapper__content\"\n                            ],\n                            text: content\n                        }\n                    ]\n                }\n            ]\n        };\n        const chatValue = {\n            tag: \"section\",\n            classList: [\n                \"article__section\"\n            ],\n            children: [\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__content-wrapper\"\n                    ],\n                    children: [\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"content-wrapper__profile\"\n                            ]\n                        },\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"content-wrapper__content\"\n                            ],\n                            text: content\n                        }\n                    ]\n                }\n            ]\n        };\n        const hashMap = new Map().set(1, userValue).set(2, chatValue);\n        return hashMap.get(role);\n    }) || [];\n    for (const node of treeData){\n        const element = createTreeNode(node);\n        elChatMainMainArticle.appendChild(element);\n    }\n};\nconst renderSignInOrUp = (toggle = true)=>{\n    const signedInClassName = \"signed-in\";\n    if (!toggle) {\n        elChatHeaderMenuNavSignInOrUp.classList.remove(signedInClassName);\n        elChatMainAsideSignInOrUp.classList.remove(signedInClassName);\n        elChatHeaderMenuNavBottomListItemSignOut.classList.remove(signedInClassName);\n        elChatMainMenuAsideBottomListItemSignOut.classList.remove(signedInClassName);\n        return;\n    }\n    elChatHeaderMenuNavSignInOrUp.classList.add(signedInClassName);\n    elChatMainAsideSignInOrUp.classList.add(signedInClassName);\n    elChatHeaderMenuNavBottomListItemSignOut.classList.add(signedInClassName);\n    elChatMainMenuAsideBottomListItemSignOut.classList.add(signedInClassName);\n};\n// 主函数\nconst main = async ()=>{\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    if (!getSignInStatus()) return;\n    renderSignInOrUp(true);\n// await fetchTitleHistoryList().catch((error) => {\n//   throw error;\n// });\n// await fetchChatHistoryList().catch((error) => {\n//   throw error;\n// });\n};\nmain();\n\n//# sourceMappingURL=index.513f5224.js.map\n","const el = (selector) => document.querySelector(selector);\n\n// 元素\nconst elChatHeaderMenu = el(`.chat-header__menu`);\nconst elChatHeaderMenuNav = el(`.chat-header__menu__nav`);\nconst elChatHeaderMenuNavSignInOrUp = el(\n  `.chat-header__menu__nav__sign-in-or-up`\n);\nconst elChatHeaderMenuNavList = el(`.chat-header__menu__nav__list`);\nconst elChatHeaderNewChat = el(`.chat-header__new-chat`);\nconst elChatHeaderMenuNavBottomListItemSignOut = el(\n  `.chat-header__menu__nav__bottom-list .list-item.sign-out`\n);\nconst elChatMainAsideSignInOrUp = el(`.chat-main__aside__sign-in-or-up`);\nconst elChatMainAsideNewChat = el(`.chat-main__aside__new-chat`);\nconst elChatMainAsideList = el(`.chat-main__aside__list`);\nconst elChatMainMenuAsideBottomListItemSignOut = el(\n  `.chat-main__aside__bottom-list .list-item.sign-out`\n);\nconst elChatMainMainArticle = el(`.chat-main__main__article`);\nconst elChatMainMainFormQuestionTextarea = el(\n  `.chat-main__main__form__question__textarea`\n);\nconst elChatMask = el(`.chat-mask`);\nconst elChatMaskDialogHeaderClose = el(\n  `.chat-mask__dialog .dialog__header__close`\n);\n\n// 事件处理\nconst onClickSignInOrUp = () => {\n  elChatMask.classList.add(\"visible\");\n};\nconst onClickNewChat = () => {\n  elChatMainMainArticle.innerHTML = \"\";\n  elChatMainMainFormQuestionTextarea.focus();\n};\nconst onClickListItem = async function (event) {\n  const {\n    target: { className },\n    target,\n  } = event;\n  if (![\"list-item\", \"list-item__text\"].includes(className)) {\n    return;\n  }\n  const elListItemList = this.children;\n  for (const elListItem of elListItemList) {\n    elListItem.classList.remove(\"active\");\n  }\n  const currentElListItem = className.includes(\"list-item__text\")\n    ? target.parentNode\n    : target;\n  currentElListItem.classList.add(\"active\");\n  elChatMainMainArticle.innerHTML = \"\";\n  // await fetchChatHistoryList().catch((error) => {\n  //   throw error;\n  // });\n};\nconst onClickSignOut = () => {\n  setSignInStatus(\"\");\n  renderSignInOrUp(false);\n};\nconst onKeyupQuestionTextarea = (event) => {\n  const { key, shiftKey } = event;\n  if (!(key === \"Enter\" && !shiftKey)) {\n    return;\n  }\n  currentChatHistoryList.push({\n    role: 1,\n    content: elChatMainMainFormQuestionTextarea.value,\n  });\n  renderCurrentChatHistoryList([\n    { role: 1, content: elChatMainMainFormQuestionTextarea.value },\n  ]);\n  elChatMainMainFormQuestionTextarea.value = \"\";\n  elChatMainMainArticle.scrollTop = elChatMainMainArticle.scrollHeight;\n  setTimeout(() => {\n    currentChatHistoryList.push({\n      role: 2,\n      content: \"抱歉我没有理解您的问题。\",\n    });\n    renderCurrentChatHistoryList([\n      { role: 2, content: \"抱歉我没有理解您的问题。\" },\n    ]);\n    const top = 99999;\n    elChatMainMainArticle.scrollBy({ top });\n  }, 1000);\n};\n\n// 监听器\nwindow.addEventListener(\"resize\", () => {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n});\nwindow.addEventListener(\"click\", (event) => {\n  const { target } = event;\n  if (elChatMask.classList.contains(\"visible\")) {\n    return;\n  }\n  if (elChatHeaderMenu === target || elChatHeaderMenuNav.contains(target)) {\n    return;\n  }\n  elChatHeaderMenuNav.classList.remove(\"visible\");\n});\n\nelChatHeaderMenu.addEventListener(\"click\", (event) => {\n  const { target } = event;\n  if (elChatHeaderMenuNav.classList.contains(\"visible\")) {\n    if (target !== elChatHeaderMenu) {\n      return;\n    }\n    elChatHeaderMenuNav.classList.remove(\"visible\");\n    return;\n  }\n  elChatHeaderMenuNav.classList.add(\"visible\");\n});\nelChatHeaderMenuNavSignInOrUp.addEventListener(\"click\", onClickSignInOrUp);\nelChatHeaderMenuNavList.addEventListener(\"click\", onClickListItem);\nelChatHeaderNewChat.addEventListener(\"click\", onClickNewChat);\nelChatHeaderMenuNavBottomListItemSignOut.addEventListener(\n  \"click\",\n  onClickSignOut\n);\nelChatMainAsideSignInOrUp.addEventListener(\"click\", onClickSignInOrUp);\nelChatMainAsideNewChat.addEventListener(\"click\", onClickNewChat);\nelChatMainAsideList.addEventListener(\"click\", onClickListItem);\nelChatMainMenuAsideBottomListItemSignOut.addEventListener(\n  \"click\",\n  onClickSignOut\n);\nelChatMainMainFormQuestionTextarea.addEventListener(\n  \"keyup\",\n  onKeyupQuestionTextarea\n);\nelChatMaskDialogHeaderClose.addEventListener(\"click\", () => {\n  elChatMask.classList.remove(\"visible\");\n\n  // 模拟登录\n  setSignInStatus(\"admin\");\n  renderSignInOrUp(true);\n});\n\n// 数据\nlet currentTitleHistoryList = [];\nlet currentChatHistoryList = [];\n\n// 模拟接口定义\nconst fetchTitleHistoryList = async () => {\n  const { data } = await fetch(\"public/fetch-title-history-list.json\")\n    .then((response) => response.json())\n    .catch((error) => {\n      throw error;\n    });\n  currentTitleHistoryList = Array.isArray(data) ? data : [];\n  renderCurrentTitleHistoryList();\n};\nconst fetchChatHistoryList = async () => {\n  const { data } = await fetch(\n    `public/fetch-chat-history-list-${randomNumber(3)}.json`\n  )\n    .then((response) => response.json())\n    .catch((error) => {\n      throw error;\n    });\n  currentChatHistoryList = Array.isArray(data) ? data : [];\n  renderCurrentChatHistoryList(currentChatHistoryList);\n};\n\n// 数据处理方法\nconst randomNumber = (num) => {\n  return Math.floor(Math.random() * num);\n};\n// 创建函数来递归生成 HTML 结构\nconst createTreeNode = (node) => {\n  const element = document.createElement(node.tag);\n  if (node.classList) {\n    for (const className of node.classList) {\n      element.classList.add(className);\n    }\n  }\n  if (node.text) {\n    if (!node.text.includes(\"```\")) {\n      element.textContent = node.text;\n    }\n    const regex = /(```)([\\s\\S]+?)(```)/g;\n    const replacement = `<pre class=\"content__code\"><code>$2</code></pre>`;\n    element.innerHTML = node.text.replace(regex, replacement);\n  }\n  if (node.children) {\n    for (const childNode of node.children) {\n      const childElement = createTreeNode(childNode);\n      element.appendChild(childElement);\n    }\n  }\n  return element;\n};\n// 获取登录状态\nconst getSignInStatus = () => {\n  const signedIn = localStorage.getItem(\"signedIn\") || \"\";\n  if (!signedIn) {\n    return false;\n  }\n  return true;\n};\n// 设置登录状态\nconst setSignInStatus = (signedIn) => {\n  if (!signedIn) {\n    localStorage.removeItem(\"signedIn\");\n    return;\n  }\n  localStorage.setItem(\"signedIn\", signedIn);\n};\n\n// 渲染方法\nconst renderCurrentTitleHistoryList = () => {\n  const treeData =\n    currentTitleHistoryList.map((currentTitleHistoryItem) => {\n      const { content } = currentTitleHistoryItem;\n      const titleValue = {\n        tag: \"li\",\n        classList: [\"list-item\"],\n        children: [\n          { tag: \"p\", classList: [\"list-item__text\"], text: content },\n          {\n            tag: \"div\",\n            classList: [\"list-item__button-wrapper\"],\n            children: [\n              { tag: \"div\", classList: [\"button-wrapper__download\"] },\n              {\n                tag: \"div\",\n                classList: [\"button-wrapper__delete\"],\n              },\n            ],\n          },\n        ],\n      };\n      return titleValue;\n    }) || [];\n  for (const node of treeData) {\n    const element = createTreeNode(node);\n    const copyElement = createTreeNode(node);\n    elChatMainAsideList.appendChild(element);\n    elChatHeaderMenuNavList.appendChild(copyElement);\n  }\n};\nconst renderCurrentChatHistoryList = (chatHistoryList) => {\n  const treeData =\n    chatHistoryList.map((chatHistoryItem) => {\n      const { role, content } = chatHistoryItem;\n      const userValue = {\n        tag: \"section\",\n        classList: [\"article__section\", \"user\"],\n        children: [\n          {\n            tag: \"div\",\n            classList: [\"section__content-wrapper\"],\n            children: [\n              { tag: \"div\", classList: [\"content-wrapper__profile\"] },\n              {\n                tag: \"div\",\n                classList: [\"content-wrapper__content\"],\n                text: content,\n              },\n            ],\n          },\n        ],\n      };\n      const chatValue = {\n        tag: \"section\",\n        classList: [\"article__section\"],\n        children: [\n          {\n            tag: \"div\",\n            classList: [\"section__content-wrapper\"],\n            children: [\n              { tag: \"div\", classList: [\"content-wrapper__profile\"] },\n              {\n                tag: \"div\",\n                classList: [\"content-wrapper__content\"],\n                text: content,\n              },\n            ],\n          },\n        ],\n      };\n      const hashMap = new Map().set(1, userValue).set(2, chatValue);\n      return hashMap.get(role);\n    }) || [];\n\n  for (const node of treeData) {\n    const element = createTreeNode(node);\n    elChatMainMainArticle.appendChild(element);\n  }\n};\nconst renderSignInOrUp = (toggle = true) => {\n  const signedInClassName = \"signed-in\";\n  if (!toggle) {\n    elChatHeaderMenuNavSignInOrUp.classList.remove(signedInClassName);\n    elChatMainAsideSignInOrUp.classList.remove(signedInClassName);\n    elChatHeaderMenuNavBottomListItemSignOut.classList.remove(\n      signedInClassName\n    );\n    elChatMainMenuAsideBottomListItemSignOut.classList.remove(\n      signedInClassName\n    );\n    return;\n  }\n  elChatHeaderMenuNavSignInOrUp.classList.add(signedInClassName);\n  elChatMainAsideSignInOrUp.classList.add(signedInClassName);\n  elChatHeaderMenuNavBottomListItemSignOut.classList.add(signedInClassName);\n  elChatMainMenuAsideBottomListItemSignOut.classList.add(signedInClassName);\n};\n\n// 主函数\nconst main = async () => {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  if (!getSignInStatus()) {\n    return;\n  }\n  renderSignInOrUp(true);\n  // await fetchTitleHistoryList().catch((error) => {\n  //   throw error;\n  // });\n  // await fetchChatHistoryList().catch((error) => {\n  //   throw error;\n  // });\n};\n\nmain();\n"],"names":["el","selector","document","querySelector","elChatHeaderMenu","elChatHeaderMenuNav","elChatHeaderMenuNavSignInOrUp","elChatHeaderMenuNavList","elChatHeaderNewChat","elChatHeaderMenuNavBottomListItemSignOut","elChatMainAsideSignInOrUp","elChatMainAsideNewChat","elChatMainAsideList","elChatMainMenuAsideBottomListItemSignOut","elChatMainMainArticle","elChatMainMainFormQuestionTextarea","elChatMask","elChatMaskDialogHeaderClose","onClickSignInOrUp","classList","add","onClickNewChat","innerHTML","focus","onClickListItem","event","target","className","includes","elListItemList","children","elListItem","remove","currentElListItem","parentNode","onClickSignOut","setSignInStatus","renderSignInOrUp","window","addEventListener","vh","innerHeight","documentElement","style","setProperty","contains","key","shiftKey","currentChatHistoryList","push","role","content","value","renderCurrentChatHistoryList","scrollTop","scrollHeight","setTimeout","scrollBy","top","createTreeNode","node","element","createElement","tag","text","textContent","replace","childNode","childElement","appendChild","getSignInStatus","signedIn","localStorage","getItem","removeItem","setItem","chatHistoryList","treeData","map","chatHistoryItem","hashMap","Map","set","get","toggle","signedInClassName","main"],"version":3,"file":"index.513f5224.js.map"}