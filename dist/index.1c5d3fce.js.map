{"mappings":"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","sources":["<anon>","src/main.js"],"sourcesContent":["const el = (selector)=>document.querySelector(selector);\n// 元素\nconst elUserMenu = el(`.user__menu`);\nconst elMainAside = el(`.main__aside`);\nconst elFormNewChatButton = el(`.form__new-chat-button`);\nconst elAsideList = el(`.aside__list`);\nconst elMainArticle = el(`.main__article`);\nconst elQuestionTextarea = el(`.question__textarea`);\nconst elQuestionSubmitButton = el(`.question__submit-button`);\n// 事件处理\nconst onClickQuestionSubmitButton = ()=>{\n    currentChatHistoryList.push({\n        role: 1,\n        content: elQuestionTextarea.value\n    });\n    renderCurrentChatHistoryList([\n        {\n            role: 1,\n            content: elQuestionTextarea.value\n        }\n    ]);\n    elQuestionTextarea.value = \"\";\n    elMainArticle.scrollTop = elMainArticle.scrollHeight;\n    setTimeout(()=>{\n        currentChatHistoryList.push({\n            role: 2,\n            content: \"抱歉我没有理解您的问题。\"\n        });\n        renderCurrentChatHistoryList([\n            {\n                role: 2,\n                content: \"抱歉我没有理解您的问题。\"\n            }\n        ]);\n    }, 1000);\n};\n// 监听器\nwindow.addEventListener(\"resize\", ()=>{\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n});\nelUserMenu.addEventListener(\"click\", ()=>{\n    if ([\n        ...elMainAside.classList\n    ].includes(\"visible\")) elMainAside.classList.remove(\"visible\");\n    else elMainAside.classList.add(\"visible\");\n});\nelFormNewChatButton.addEventListener(\"click\", ()=>{\n    elMainArticle.innerHTML = \"\";\n    elQuestionTextarea.focus();\n});\nelAsideList.addEventListener(\"click\", async (event)=>{\n    const { target: { className  }  } = event;\n    if (className !== \"list-item\") return;\n    elMainArticle.innerHTML = \"\";\n    await fetchChatHistoryList().catch((error)=>{\n        throw error;\n    });\n});\nelMainArticle.addEventListener(\"click\", (event)=>{\n    const { target: { className  } , target  } = event;\n    if (!className.includes(\"content__more-button\")) return;\n    if (className.includes(\"expanded\")) {\n        target.innerHTML = \"展开更多\";\n        target.classList.remove(\"expanded\");\n        target.previousSibling.classList.remove(\"expanded\");\n    } else {\n        target.innerHTML = \"收起更多\";\n        target.classList.add(\"expanded\");\n        target.previousSibling.classList.add(\"expanded\");\n    }\n});\nelQuestionSubmitButton.addEventListener(\"click\", onClickQuestionSubmitButton);\n// 数据\nlet currentTitleHistoryList = [];\nlet currentChatHistoryList = [];\n// 模拟接口定义\nconst fetchTitleHistoryList = async ()=>{\n    const { data  } = await fetch(\"public/fetch-title-history-list.json\").then((response)=>response.json()).catch((error)=>{\n        throw error;\n    });\n    currentTitleHistoryList = Array.isArray(data) ? data : [];\n    renderCurrentTitleHistoryList();\n};\nconst fetchChatHistoryList = async ()=>{\n    const { data  } = await fetch(`public/fetch-chat-history-list-${randomNumber(3)}.json`).then((response)=>response.json()).catch((error)=>{\n        throw error;\n    });\n    currentChatHistoryList = Array.isArray(data) ? data : [];\n    renderCurrentChatHistoryList(currentChatHistoryList);\n};\n// 数据处理方法\nconst randomNumber = (num)=>{\n    return Math.floor(Math.random() * num);\n};\n// 创建函数来递归生成 HTML 结构\nconst createTreeNode = (node)=>{\n    const element = document.createElement(node.tag);\n    if (node.classList) for (const className of node.classList)element.classList.add(className);\n    if (node.text) element.textContent = node.text;\n    if (node.children) for (const childNode of node.children){\n        const childElement = createTreeNode(childNode);\n        element.appendChild(childElement);\n    }\n    return element;\n};\n// 渲染方法\nconst renderCurrentTitleHistoryList = ()=>{\n    const treeData = currentTitleHistoryList.map((currentTitleHistoryItem)=>{\n        const { content  } = currentTitleHistoryItem;\n        const titleValue = {\n            tag: \"li\",\n            classList: [\n                \"list-item\"\n            ],\n            text: content\n        };\n        return titleValue;\n    }) || [];\n    for (const node of treeData){\n        const element = createTreeNode(node);\n        elAsideList.appendChild(element);\n    }\n};\nconst renderCurrentChatHistoryList = (chatHistoryList)=>{\n    const treeData = chatHistoryList.map((chatHistoryItem)=>{\n        const { role , content  } = chatHistoryItem;\n        const userValue = {\n            tag: \"section\",\n            classList: [\n                \"article__section\",\n                \"user\"\n            ],\n            children: [\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__profile\"\n                    ]\n                },\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__content\"\n                    ],\n                    text: content\n                }\n            ]\n        };\n        const thresholdContentLength = 500;\n        const chatValue = content.length > thresholdContentLength ? {\n            tag: \"section\",\n            classList: [\n                \"article__section\"\n            ],\n            children: [\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__profile\"\n                    ]\n                },\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__content\"\n                    ],\n                    children: [\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"content__text\",\n                                \"more\"\n                            ],\n                            text: content\n                        },\n                        {\n                            tag: \"span\",\n                            classList: [\n                                \"content__more-button\"\n                            ],\n                            text: \"展开更多\"\n                        }\n                    ]\n                }\n            ]\n        } : {\n            tag: \"section\",\n            classList: [\n                \"article__section\"\n            ],\n            children: [\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__profile\"\n                    ]\n                },\n                {\n                    tag: \"div\",\n                    classList: [\n                        \"section__content\"\n                    ],\n                    children: [\n                        {\n                            tag: \"div\",\n                            classList: [\n                                \"content__text\"\n                            ],\n                            text: content\n                        }\n                    ]\n                }\n            ]\n        };\n        const hashMap = new Map().set(1, userValue).set(2, chatValue);\n        return hashMap.get(role);\n    }) || [];\n    for (const node of treeData){\n        const element = createTreeNode(node);\n        elMainArticle.appendChild(element);\n    }\n};\n// 主函数\nconst main = async ()=>{\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    await fetchTitleHistoryList().catch((error)=>{\n        throw error;\n    });\n    await fetchChatHistoryList().catch((error)=>{\n        throw error;\n    });\n};\nmain();\n\n//# sourceMappingURL=index.1c5d3fce.js.map\n","const el = (selector) => document.querySelector(selector);\n\n// 元素\nconst elUserMenu = el(`.user__menu`);\nconst elMainAside = el(`.main__aside`);\nconst elFormNewChatButton = el(`.form__new-chat-button`);\nconst elAsideList = el(`.aside__list`);\nconst elMainArticle = el(`.main__article`);\nconst elQuestionTextarea = el(`.question__textarea`);\nconst elQuestionSubmitButton = el(`.question__submit-button`);\n\n// 事件处理\nconst onClickQuestionSubmitButton = () => {\n  currentChatHistoryList.push({ role: 1, content: elQuestionTextarea.value });\n  renderCurrentChatHistoryList([\n    { role: 1, content: elQuestionTextarea.value },\n  ]);\n  elQuestionTextarea.value = \"\";\n  elMainArticle.scrollTop = elMainArticle.scrollHeight;\n  setTimeout(() => {\n    currentChatHistoryList.push({\n      role: 2,\n      content: \"抱歉我没有理解您的问题。\",\n    });\n    renderCurrentChatHistoryList([\n      { role: 2, content: \"抱歉我没有理解您的问题。\" },\n    ]);\n  }, 1000);\n};\n\n// 监听器\nwindow.addEventListener(\"resize\", () => {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n});\nelUserMenu.addEventListener(\"click\", () => {\n  if ([...elMainAside.classList].includes(\"visible\")) {\n    elMainAside.classList.remove(\"visible\");\n  } else {\n    elMainAside.classList.add(\"visible\");\n  }\n});\nelFormNewChatButton.addEventListener(\"click\", () => {\n  elMainArticle.innerHTML = \"\";\n  elQuestionTextarea.focus();\n});\nelAsideList.addEventListener(\"click\", async (event) => {\n  const {\n    target: { className },\n  } = event;\n  if (className !== \"list-item\") {\n    return;\n  }\n  elMainArticle.innerHTML = \"\";\n  await fetchChatHistoryList().catch((error) => {\n    throw error;\n  });\n});\nelMainArticle.addEventListener(\"click\", (event) => {\n  const {\n    target: { className },\n    target,\n  } = event;\n  if (!className.includes(\"content__more-button\")) {\n    return;\n  }\n  if (className.includes(\"expanded\")) {\n    target.innerHTML = \"展开更多\";\n    target.classList.remove(\"expanded\");\n    target.previousSibling.classList.remove(\"expanded\");\n  } else {\n    target.innerHTML = \"收起更多\";\n    target.classList.add(\"expanded\");\n    target.previousSibling.classList.add(\"expanded\");\n  }\n});\nelQuestionSubmitButton.addEventListener(\"click\", onClickQuestionSubmitButton);\n\n// 数据\nlet currentTitleHistoryList = [];\nlet currentChatHistoryList = [];\n\n// 模拟接口定义\nconst fetchTitleHistoryList = async () => {\n  const { data } = await fetch(\"public/fetch-title-history-list.json\")\n    .then((response) => response.json())\n    .catch((error) => {\n      throw error;\n    });\n  currentTitleHistoryList = Array.isArray(data) ? data : [];\n  renderCurrentTitleHistoryList();\n};\nconst fetchChatHistoryList = async () => {\n  const { data } = await fetch(\n    `public/fetch-chat-history-list-${randomNumber(3)}.json`\n  )\n    .then((response) => response.json())\n    .catch((error) => {\n      throw error;\n    });\n  currentChatHistoryList = Array.isArray(data) ? data : [];\n  renderCurrentChatHistoryList(currentChatHistoryList);\n};\n\n// 数据处理方法\nconst randomNumber = (num) => {\n  return Math.floor(Math.random() * num);\n};\n// 创建函数来递归生成 HTML 结构\nconst createTreeNode = (node) => {\n  const element = document.createElement(node.tag);\n  if (node.classList) {\n    for (const className of node.classList) {\n      element.classList.add(className);\n    }\n  }\n  if (node.text) {\n    element.textContent = node.text;\n  }\n  if (node.children) {\n    for (const childNode of node.children) {\n      const childElement = createTreeNode(childNode);\n      element.appendChild(childElement);\n    }\n  }\n  return element;\n};\n\n// 渲染方法\nconst renderCurrentTitleHistoryList = () => {\n  const treeData =\n    currentTitleHistoryList.map((currentTitleHistoryItem) => {\n      const { content } = currentTitleHistoryItem;\n      const titleValue = {\n        tag: \"li\",\n        classList: [\"list-item\"],\n        text: content,\n      };\n      return titleValue;\n    }) || [];\n  for (const node of treeData) {\n    const element = createTreeNode(node);\n    elAsideList.appendChild(element);\n  }\n};\nconst renderCurrentChatHistoryList = (chatHistoryList) => {\n  const treeData =\n    chatHistoryList.map((chatHistoryItem) => {\n      const { role, content } = chatHistoryItem;\n      const userValue = {\n        tag: \"section\",\n        classList: [\"article__section\", \"user\"],\n        children: [\n          { tag: \"div\", classList: [\"section__profile\"] },\n          {\n            tag: \"div\",\n            classList: [\"section__content\"],\n            text: content,\n          },\n        ],\n      };\n      const thresholdContentLength = 500;\n      const chatValue =\n        content.length > thresholdContentLength\n          ? {\n              tag: \"section\",\n              classList: [\"article__section\"],\n              children: [\n                { tag: \"div\", classList: [\"section__profile\"] },\n                {\n                  tag: \"div\",\n                  classList: [\"section__content\"],\n                  children: [\n                    {\n                      tag: \"div\",\n                      classList: [\"content__text\", \"more\"],\n                      text: content,\n                    },\n                    {\n                      tag: \"span\",\n                      classList: [\"content__more-button\"],\n                      text: \"展开更多\",\n                    },\n                  ],\n                },\n              ],\n            }\n          : {\n              tag: \"section\",\n              classList: [\"article__section\"],\n              children: [\n                { tag: \"div\", classList: [\"section__profile\"] },\n                {\n                  tag: \"div\",\n                  classList: [\"section__content\"],\n                  children: [\n                    {\n                      tag: \"div\",\n                      classList: [\"content__text\"],\n                      text: content,\n                    },\n                  ],\n                },\n              ],\n            };\n      const hashMap = new Map().set(1, userValue).set(2, chatValue);\n      return hashMap.get(role);\n    }) || [];\n\n  for (const node of treeData) {\n    const element = createTreeNode(node);\n    elMainArticle.appendChild(element);\n  }\n};\n\n// 主函数\nconst main = async () => {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  await fetchTitleHistoryList().catch((error) => {\n    throw error;\n  });\n  await fetchChatHistoryList().catch((error) => {\n    throw error;\n  });\n};\n\nmain();\n"],"names":["el","selector","document","querySelector","elUserMenu","elMainAside","elFormNewChatButton","elAsideList","elMainArticle","elQuestionTextarea","elQuestionSubmitButton","window","addEventListener","vh","innerHeight","documentElement","style","setProperty","classList","includes","remove","add","innerHTML","focus","event","target","className","fetchChatHistoryList","catch","error","previousSibling","currentChatHistoryList","push","role","content","value","renderCurrentChatHistoryList","scrollTop","scrollHeight","setTimeout","currentTitleHistoryList","fetchTitleHistoryList","data","fetch","then","response","json","Array","isArray","renderCurrentTitleHistoryList","randomNumber","num","Math","floor","random","createTreeNode","node","element","createElement","tag","text","textContent","children","childNode","childElement","appendChild","treeData","map","currentTitleHistoryItem","chatHistoryList","chatHistoryItem","chatValue","length","hashMap","Map","set","get","main"],"version":3,"file":"index.1c5d3fce.js.map"}